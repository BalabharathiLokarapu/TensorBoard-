dist: trusty
sudo: required

language: python
python:
  - "2.7"
  - "3.4"
services:
  docker

os:
  - linux

branches:
  only:
    - master
    - /^\d+\.\d+(\.\d+)?(-\S*)?$/

env:
  - BAZEL=0.5.4 TF=NIGHTLY

cache:
  directories:
    - $HOME/.bazel-output-base

before_install:
  - |
    set -e

    case "${TF}" in
      RELEASE)
        pip install -I tensorflow
        ;;
      NIGHTLY)
        if [[ "${TRAVIS_PYTHON_VERSION}" == 2* ]]; then
        DOCKER_INSTANCE_VERSION='nightly'
        else
        DOCKER_INSTANCE_VERSION='nightly-py3'
        fi
        ;;
      *)
        DOCKER_INSTANCE_VERSION="${TF}"
        ;;
    esac
    DOCKER_INSTANCE="tensorflow/tensorflow:${DOCKER_INSTANCE_VERSION}"
    docker pull $DOCKER_INSTANCE

    # Wait for docker to start.
    docker run -v `pwd` $DOCKER_INSTANCE /bin/sh -c "sleep 3600" &
    sleep 5
    export CONTAINER=$(docker ps -q | head -n 1)
    docker exec $CONTAINER /bin/sh -c "apt-get update -qq"

    BAZEL_URL="https://github.com/bazelbuild/bazel/releases/download/${BAZEL}/bazel-${BAZEL}-installer-linux-x86_64.sh"
    docker exec $CONTAINER /bin/sh -c "apt-get install -y wget"
    
    docker exec $CONTAINER /bin/sh -c "wget -t 3 -O install.sh ${BAZEL_URL}"
    docker exec $CONTAINER /bin/sh -c "chmod +x install.sh"
    docker exec $CONTAINER /bin/sh -c "./install.sh --user"

    docker exec $CONTAINER /bin/sh -c "pip install pylint==1.8.1"
    docker exec $CONTAINER /bin/sh -c "pip install futures==3.1.1"
    docker exec $CONTAINER /bin/sh -c "pip install grpcio==1.6.3"

    docker exec $CONTAINER /bin/sh -c "mkdir './.bazel-output-base'"

script:
  - |
    docker exec $CONTAINER /bin/sh -c "bazel \
      --output_base=./.bazel-output-base \
      --batch \
      --host_jvm_args=-Xmx500m \
      --host_jvm_args=-Xms500m \
      build \
      tensorboard/... \
      --worker_verbose \
      --verbose_failures \
      --spawn_strategy=sandboxed \
      --genrule_strategy=sandboxed \
      --local_resources=400,2,1.0 \
      --worker_max_instances=2 \
      --strategy=Javac=worker \
      --strategy=Closure=worker"

  - |
    docker exec $CONTAINER /bin/sh -c "bazel \
      --output_base=./.bazel-output-base \
      --batch \
      --host_jvm_args=-Xmx500m \
      --host_jvm_args=-Xms500m \
      test \
      tensorboard/... \
      --verbose_failures \
      --test_verbose_timeout_warnings \
      --test_output=errors \
      --spawn_strategy=sandboxed \
      --local_resources=400,2,1.0"
  - |
    docker exec $CONTAINER /bin/sh -c "TB=\$(pwd)"
    docker exec $CONTAINER /bin/sh -c "cd bazel-genfiles"
    docker exec $CONTAINER /bin/sh -c "find tensorboard -name \*.py -exec cp {} \"\$TB\"/{} \;"
    docker exec $CONTAINER /bin/sh -c "cd \"\$TB\""
    docker exec $CONTAINER /bin/sh -c "pylint tensorboard"

before_cache:
  - |
    docker exec $CONTAINER /bin/sh -c "find ./.bazel-output-base \
      -name \*.runfiles -print0 \
      -or -name \*.tar.gz -print0 \
      -or -name \*-execroot.json -print0 \
      -or -name \*-tsc.json -print0 \
      -or -name \*-params.pbtxt -print0 \
      -or -name \*-args.txt -print0 \
      -or -name \*.runfiles_manifest -print0 \
      -or -name \*.server_params.pbtxt -print0 \
      | xargs -0 rm -rf"

notifications:
  email: false
