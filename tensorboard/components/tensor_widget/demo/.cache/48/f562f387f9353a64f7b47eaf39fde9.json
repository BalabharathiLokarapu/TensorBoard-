{"id":"../health-pill.ts","dependencies":[{"name":"/usr/local/google/home/cais/tb-forks/tensorboard-1/tensorboard/components/tensor_widget/tsconfig.json","includedInParent":true,"mtime":1563976431723},{"name":"/usr/local/google/home/cais/tb-forks/tensorboard-1/tensorboard/components/tensor_widget/demo/package.json","includedInParent":true,"mtime":1563978303161}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction drawHealthPill(element, healthPill) {\n  return __awaiter(this, void 0, Promise, function () {\n    return __generator(this, function (_a) {\n      console.log('Drawing health pill:', healthPill);\n      return [2];\n    });\n  });\n}\n\nexports.drawHealthPill = drawHealthPill;"},"sourceMaps":{"js":{"mappings":[{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":146,"column":0}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":22},"generated":{"line":146,"column":9}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":146,"column":23}},{"source":"../health-pill.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":146,"column":24}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":146,"column":31}},{"source":"../health-pill.ts","name":null,"original":{"line":24,"column":29},"generated":{"line":146,"column":33}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":146,"column":43}},{"source":"../health-pill.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":146,"column":45}},{"source":"../health-pill.ts","name":null,"original":{"line":24,"column":64},"generated":{"line":147,"column":33}},{"source":"../health-pill.ts","name":null,"original":{"line":24,"column":71},"generated":{"line":147,"column":42}},{"source":"../health-pill.ts","name":null,"original":{"line":24,"column":71},"generated":{"line":147,"column":54}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":149,"column":0}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":149,"column":6}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":149,"column":13}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":149,"column":14}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":149,"column":17}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":14},"generated":{"line":149,"column":18}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":149,"column":40}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":38},"generated":{"line":149,"column":42}},{"source":"../health-pill.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":149,"column":52}},{"source":"../health-pill.ts","name":null,"original":{"line":26,"column":1},"generated":{"line":153,"column":0}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":155,"column":0}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":155,"column":7}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":155,"column":8}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":155,"column":22}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":155,"column":25}},{"source":"../health-pill.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":155,"column":39}}],"sources":{"../health-pill.ts":"/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\nimport {BaseTensorHealthPill} from \"./health-pill-types\";\n\n/**\n * TODO(cais): Add doc string.\n * @param element\n * @param x\n */\nexport async function drawHealthPill(\n    element: HTMLDivElement, healthPill: BaseTensorHealthPill): Promise<void> {\n  console.log('Drawing health pill:', healthPill);  // DEBUG\n}\n"},"lineCount":null}},"error":null,"hash":"a4cebb6da20d1facde179600f60ac2af","cacheData":{"env":{}}}